name: "tiny_pytorch test workflow"
on: [push, pull_request]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          # macOS comes with Xcode Command Line Tools by default
          # but we ensure they're available
          xcode-select --install || true

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Ensure setuptools is installed
        run: poetry run pip install setuptools

      - name: Build C++ extension
        run: poetry run python setup.py build_ext --inplace

      - name: Install package in development mode
        run: poetry run pip install -e .

      - name: Test C++ extension import
        run: poetry run python -c "import tiny_pytorch.ndarray_backend_cpu; print('âœ… C++ extension imported successfully')"

      - name: Test with NumPy backend
        run: |
          export TINY_PYTORCH_BACKEND=np
          poetry run pytest

      - name: Test with NDArray backend
        run: |
          export TINY_PYTORCH_BACKEND=nd
          poetry run pytest
